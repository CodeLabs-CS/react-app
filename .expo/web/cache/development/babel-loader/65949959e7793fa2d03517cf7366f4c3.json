{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/liliaqian/Desktop/react-app-project/react-app/components/login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport * as firebase from \"firebase\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this);\n\n    _this.updateInputVal = function (val, prop) {\n      var state = _this.state;\n      state[prop] = val;\n\n      _this.setState(state);\n    };\n\n    _this.userLogin = function () {\n      if (_this.state.email === '' && _this.state.password === '') {\n        Alert.alert('Enter details to sign in!');\n      } else {\n        _this.setState({\n          isLoading: true\n        });\n\n        firebase.auth().signInWithEmailAndPassword(_this.state.email, _this.state.password).then(function (res) {\n          console.log(res);\n          console.log('User logged-in successfully!');\n\n          _this.setState({\n            isLoading: false,\n            email: '',\n            password: ''\n          });\n\n          _this.props.navigation.navigate('Dashboard');\n        }).catch(function (error) {\n          return _this.setState({\n            errorMessage: error.message\n          });\n        });\n      }\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.isLoading) {\n        return React.createElement(View, {\n          style: styles.preloader,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"#fff\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Email\",\n        color: \"white\",\n        value: this.state.email,\n        onChangeText: function onChangeText(val) {\n          return _this2.updateInputVal(val, 'email');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        style: styles.inputStyle,\n        placeholder: \"Password\",\n        value: this.state.password,\n        onChangeText: function onChangeText(val) {\n          return _this2.updateInputVal(val, 'password');\n        },\n        maxLength: 15,\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), React.createElement(Button, {\n        color: \"#3740FE\",\n        title: \"Sign In\",\n        onPress: function onPress() {\n          return _this2.userLogin();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }), React.createElement(Text, {\n        style: styles.loginText,\n        onPress: function onPress() {\n          return _this2.props.navigation.navigate('Signup');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, \"Don't have account? Click here to sign up.\"));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    padding: 35,\n    backgroundColor: '#293428'\n  },\n  inputStyle: {\n    width: '100%',\n    marginBottom: 15,\n    paddingBottom: 15,\n    alignSelf: \"center\",\n    borderColor: \"#fff\",\n    borderBottomWidth: 1\n  },\n  loginText: {\n    color: '#fff',\n    marginTop: 25,\n    textAlign: 'center'\n  },\n  preloader: {\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["/Users/liliaqian/Desktop/react-app-project/react-app/components/login.js"],"names":["React","Component","firebase","Login","updateInputVal","val","prop","state","setState","userLogin","email","password","Alert","alert","isLoading","auth","signInWithEmailAndPassword","then","res","console","log","props","navigation","navigate","catch","error","errorMessage","message","styles","preloader","container","inputStyle","loginText","StyleSheet","create","flex","display","flexDirection","justifyContent","padding","backgroundColor","width","marginBottom","paddingBottom","alignSelf","borderColor","borderBottomWidth","color","marginTop","textAlign","left","right","top","bottom","position","alignItems"],"mappings":"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","sourcesContent":["// components/login.js\r\n\r\nimport React, { Component } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Button, Alert, ActivityIndicator } from 'react-native';\r\nimport * as firebase from \"firebase\";\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\nexport default class Login extends Component {\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = { \r\n      email: '', \r\n      password: '',\r\n      isLoading: false\r\n    }\r\n  }\r\n\r\n  updateInputVal = (val, prop) => {\r\n    const state = this.state;\r\n    state[prop] = val;\r\n    this.setState(state);\r\n  }\r\n\r\n  userLogin = () => {\r\n    if(this.state.email === '' && this.state.password === '') {\r\n      Alert.alert('Enter details to sign in!')\r\n    } else {\r\n      this.setState({\r\n        isLoading: true,\r\n      })\r\n      firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\r\n      .then((res) => {\r\n        console.log(res)\r\n        console.log('User logged-in successfully!')\r\n        this.setState({\r\n          isLoading: false,\r\n          email: '', \r\n          password: ''\r\n        })\r\n        this.props.navigation.navigate('Dashboard')\r\n      })\r\n      .catch(error => this.setState({ errorMessage: error.message }))\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.state.isLoading){\r\n      return(\r\n        <View style={styles.preloader}>\r\n          <ActivityIndicator size=\"large\" color=\"#fff\"/>\r\n        </View>\r\n      )\r\n    }    \r\n    return (\r\n      <View style={styles.container}>  \r\n        <TextInput\r\n          style={styles.inputStyle}\r\n          placeholder=\"Email\"\r\n          color=\"white\"\r\n          value={this.state.email}\r\n          onChangeText={(val) => this.updateInputVal(val, 'email')}\r\n        />\r\n        <TextInput\r\n          style={styles.inputStyle}\r\n          placeholder=\"Password\"\r\n          value={this.state.password}\r\n          onChangeText={(val) => this.updateInputVal(val, 'password')}\r\n          maxLength={15}\r\n          secureTextEntry={true}\r\n        />   \r\n        <Button\r\n          color=\"#3740FE\"\r\n          title=\"Sign In\"\r\n          onPress={() => this.userLogin()}\r\n        />   \r\n\r\n        <Text \r\n          style={styles.loginText}\r\n          onPress={() => this.props.navigation.navigate('Signup')}>\r\n          Don't have account? Click here to sign up.\r\n        </Text>                          \r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    padding: 35,\r\n    backgroundColor: '#293428'\r\n  },\r\n  inputStyle: {\r\n    width: '100%',\r\n    marginBottom: 15,\r\n    paddingBottom: 15,\r\n    alignSelf: \"center\",\r\n    borderColor: \"#fff\",\r\n    borderBottomWidth: 1\r\n  },\r\n  // textInputStyle: {\r\n  //   color:'#fff'\r\n  // },\r\n  loginText: {\r\n    color: '#fff',\r\n    marginTop: 25,\r\n    textAlign: 'center'\r\n  },\r\n  preloader: {\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    position: 'absolute',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    backgroundColor: '#fff'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}